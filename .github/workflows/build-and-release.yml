name: 🚀 Build e Release ID Management System

on:
  push:
    tags:
      - 'v*.*.*'  # Dispara quando criar tag como v1.0.0
  
  # Permite execução manual
  workflow_dispatch:
    inputs:
      version:
        description: 'Versão do release (ex: v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write  # necessário para criar tag/release

jobs:
  build-windows:
    name: 🏗️ Build Windows
    runs-on: windows-latest
    
    steps:
    - name: 📁 Checkout código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 🏷️ Definir TAG do release
      shell: pwsh
      run: |
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          echo "RELEASE_TAG=${{ github.event.inputs.version }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }
        else {
          echo "RELEASE_TAG=${{ github.ref_name }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }

    - name: 🏷️ Criar tag (apenas em execução manual)
      if: ${{ github.event_name == 'workflow_dispatch' }}
      shell: pwsh
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "$env:RELEASE_TAG"
        git push origin "$env:RELEASE_TAG"
    
    - name: 🟢 Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: 📦 Instalar dependências
      run: |
        cd frontend
        npm ci
    
    - name: 🏗️ Build React App
      run: |
        cd frontend
        npm run build
    
    - name: ⚡ Build Electron App
      run: |
        cd frontend
        npm run electron:pack
    
    - name:  Criar ZIP do cliente
      run: |
        cd frontend/dist-electron
        Compress-Archive -Path "ID Management System-win32-x64" -DestinationPath "ID-Management-Cliente-Windows.zip" -Force
    
    - name: 🏷️ Criar Release no GitHub
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        name: "ID Management System ${{ env.RELEASE_TAG }}"
        body: |
          ## 🎉 ID Management System ${{ env.RELEASE_TAG }}
          
          ### 📥 Downloads
          - **Cliente Windows**: ID-Management-Cliente-Windows.zip
          
          ### 🚀 Novidades desta versão
          - ✅ Interface desktop nativa com Electron
          - ✅ 3 tamanhos de janela predefinidos
          - ✅ Controles personalizados (PIN, minimizar, fechar)
          - ✅ Sistema de upload drag & drop
          - ✅ Detecção automática de tipos de arquivo
          - ✅ Estrutura de pastas espelho no servidor
          - ✅ Banco PostgreSQL centralizado
          
          ### 💻 Requisitos
          - **Cliente**: Windows 10/11, Rede local
          - **Servidor**: Docker Desktop, Python 3.8+
          
          ### 🛠️ Instalação Rápida
          
          #### Para Clientes:
          1. Baixar: ID-Management-Cliente-Windows.zip  
          2. Extrair em: C:\ID-Management\
          3. Executar: ID Management System.exe
          4. App conecta automaticamente em: 192.168.1.52:8000
          
          ### 🌐 Configuração de Rede
          - **IP Servidor**: 192.168.1.52
          - **Porta API**: 8000
          - **Porta PostgreSQL**: 5432
        files: |
          frontend/dist-electron/ID-Management-Cliente-Windows.zip
        draft: false
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
